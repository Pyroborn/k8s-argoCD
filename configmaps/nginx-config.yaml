apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: microservices
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        # Cache configuration
        proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=60m max_size=100m;

        # Serve static files with caching
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Caching configuration
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Enable compression
            gzip on;
            gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
            gzip_min_length 1000;
            gzip_vary on;
            gzip_proxied any;
        }

        # Proxy API requests to the Node.js service
        location /api {
            proxy_pass http://localhost:3005;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Don't cache API responses
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    } 