apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: microservices
data:
  config.yaml: |
    rules:
    # Request rate per second - using actual metric names
    - seriesQuery: 'download_requests_total'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
      name:
        matches: "download_requests_total"
        as: "downloader_requests_per_second"
      metricsQuery: 'sum(rate(download_requests_total{<<.LabelMatchers>>}[1m]) + rate(upload_requests_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)'
    
    # Active operations - using actual metric names
    - seriesQuery: 'active_downloads_current'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
      name:
        matches: "active_downloads_current"
        as: "downloader_active_operations"
      metricsQuery: 'sum(active_downloads_current{<<.LabelMatchers>>} + active_uploads_current{<<.LabelMatchers>>}) by (<<.GroupBy>>)'

---
# ServiceAccount for the adapter
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-adapter
  namespace: microservices

---
# ClusterRole with necessary permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-adapter
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/stats
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-adapter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: microservices

---
# RBAC for authentication - must be in kube-system namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-adapter-auth
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: microservices

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-adapter
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-adapter
  template:
    metadata:
      labels:
        app: prometheus-adapter
    spec:
      serviceAccountName: prometheus-adapter
      containers:
      - name: prometheus-adapter
        image: k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.11.0
        args:
        - --secure-port=6443
        - --prometheus-url=http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090/
        - --metrics-relist-interval=30s
        - --config=/etc/adapter/config.yaml
        - --cert-dir=/tmp/cert
        - --v=2
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
        - mountPath: /tmp/cert
          name: tmp-cert
      volumes:
      - name: config
        configMap:
          name: adapter-config
      - name: tmp-cert
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-adapter
  namespace: microservices
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: prometheus-adapter

---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: prometheus-adapter
    namespace: microservices
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100