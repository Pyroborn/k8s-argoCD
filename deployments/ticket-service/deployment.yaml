apiVersion: apps/v1
kind: Deployment
metadata:
  name: ticket-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticket-service
  template:
    metadata:
      labels:
        app: ticket-service
    spec:
      containers:
      - name: ticket-service
        image: pyroborn/ticket-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3005
        envFrom:
        - configMapRef:
            name: shared-env
        - configMapRef:
            name: ticket-service-config
        env:
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: MONGODB_USER
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: MONGODB_PASSWORD
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: RABBITMQ_USER
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: RABBITMQ_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: JWT_SECRET
        - name: SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: service-api-keys
              key: SERVICE_API_KEY
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3005
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: static-files
          mountPath: /app/public
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: static-files
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: static-files
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: ticket-service
  namespace: microservices
spec:
  selector:
    app: ticket-service
  ports:
  - name: api
    port: 3005
    targetPort: 3005
    protocol: TCP
  - name: static
    port: 80
    targetPort: 80
  type: ClusterIP
