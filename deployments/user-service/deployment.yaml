apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: pyroborn/user-service:26
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3003
        volumeMounts:
        - name: user-data
          mountPath: /app/data
        envFrom:
        - configMapRef:
            name: shared-env
        - configMapRef:
            name: user-service-config
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: JWT_SECRET
        - name: SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: service-api-keys
              key: SERVICE_API_KEY
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: user-data
        persistentVolumeClaim:
          claimName: user-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: microservices
spec:
  selector:
    app: user-service
  ports:
  - port: 3003
    targetPort: 3003
    protocol: TCP
    name: http
  type: ClusterIP
